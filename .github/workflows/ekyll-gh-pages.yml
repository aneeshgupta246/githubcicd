# GitHub Actions Workflow for building and deploying a Jekyll site to GitHub Pages

name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Trigger workflow on push to the main branch
  push:
    branches: ["main"]

  # Allow manual trigger from the Actions tab
  workflow_dispatch:

# Set permissions for the GITHUB_TOKEN to allow deployment
permissions:
  contents: read      # Allows reading repository contents
  pages: write        # Allows writing to GitHub Pages
  id-token: write     # Required for OIDC authentication

# Ensure only one deployment runs at a time
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job: checks out code, builds Jekyll site, and uploads artifact
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout
        uses: actions/checkout@v3

      # Step 2: Setup GitHub Pages environment
      - name: Setup Pages
        uses: actions/configure-pages@v2

      # Step 3: Build the Jekyll site
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./           # Source directory for Jekyll
          destination: ./_site # Output directory for built site

      # Step 4: Upload the built site as an artifact for deployment
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

      # Step 5: (Test) Check that the _site/index.html exists after build
      - name: "Test: Check index.html exists"
        run: |
          if [ ! -f "_site/index.html" ]; then
            echo "index.html not found!"
            exit 1
          fi

      # Step 6: (Test) List files in the _site directory
      - name: "Test: List built files"
        run: ls -l _site

  # Deploy job: deploys the built site to GitHub Pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Step 1: Deploy the uploaded artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

      # Step 2: (Test) Output the deployment URL
      - name: "Test: Output deployment URL"
        run: echo "Deployed to ${{ steps.deployment.outputs.page_url }}"